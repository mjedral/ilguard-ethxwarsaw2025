/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockDragonSwapPositionManager,
  MockDragonSwapPositionManagerInterface,
} from "../../../contracts/mocks/MockDragonSwapPositionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "amount0Max",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount1Max",
            type: "uint128",
          },
        ],
        internalType: "struct IDragonSwapPositionManager.CollectParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct IDragonSwapPositionManager.DecreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "decreaseLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct IDragonSwapPositionManager.IncreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "increaseLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IDragonSwapPositionManager.MintParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint96",
        name: "nonce",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600055610adf90816100218239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081630c49ccbe146108a457508063219f5d17146107e057806342966c68146106dd57806388316456146103ef57806399fbab88146102e95763fc6f78651461006157600080fd5b60803660031901126101d15760043560005260206001815260406000209060058201918254916001600160801b03938484169360801c92846101dd575b836100b4575b5050604080945051928352820152f35b600101546040516370a0823160e01b81523060048201526001600160a01b03909116959083816024818a5afa908115610197576000916101ab575b50808511156101a357955b86610111575b5060409550815416905538806100a4565b61015796849161011f6109e8565b60405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529097889190829060009082906044820190565b03925af195861561019757604096156101005761018990843d8611610190575b6101818183610a31565b810190610a53565b5038610100565b503d610177565b6040513d6000823e3d90fd5b5083956100fa565b90508381813d83116101d6575b6101c28183610a31565b810103126101d15751386100ef565b600080fd5b503d6101b8565b80546040516370a0823160e01b81523060048201526001600160a01b03909116908481602481855afa80156101975785916000916102ba575b50808811156102b3575b8061023c575b505082546001600160801b03191683555061009e565b610280926102486109e8565b60405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529092839190829060009082906044820190565b03925af1801561019757610296575b8381610226565b6102ac90843d8611610190576101818183610a31565b503861028f565b5086610220565b82819392503d83116102e2575b6102d18183610a31565b810103126101d15784905138610216565b503d6102c7565b346101d15760203660031901126101d1576004356000526001602052610180602060406000206040519061031c826109fe565b60018060a01b03908181541692838152600182015492831692838683015262ffffff8160a01c16908160408401528060b81c60020b9081606085015260d01c60020b908160808501526001600160801b039182600287015416918260a08701526003870154948560c088015260056004890154988960e08a0152015494851698610100958a878a015260801c9a8b610120809a015260006040519d8e828152015260408d015260608c015260808b015260a08a015260c089015260e0880152860152840152610140830152610160820152f35b6101603660031901126101d15760005460001981146106c7576001810160005560a4359081610657575b60c435806105e7575b6001600160801b036104348285610a6b565b169261043e6109d2565b936104476109e8565b6044359562ffffff87168097036101d1576064358060020b8091036101d157608435908160020b8092036101d1576080986105d09460405194610489866109fe565b60018060a01b0316855260018060a01b0316602085015260408401526060830152878201528260a0820152600060c0820152600060e08201526001600160801b0360648404166101008201526001600160801b0360648404166101208201528560005260016020526001600160801b0361012060406000209260018060a01b038151166bffffffffffffffffffffffff60a01b8554161784556001840160018060a01b0360208301511681549062ffffff60a01b604085015160a01b16606085015160b81b918e86015160d01b62ffffff60d01b169362ffffff60e81b1617179062ffffff60b81b1617179055600560028501948460a084015116958519968782541617905560c0830151600382015560e0830151600482015501938361010083015116908554161784550151166001600160801b0382549181199060801b169116179055565b604051938452602084015260408301526060820152f35b6001600160a01b036105f76109e8565b6040516323b872dd60e01b8152336004820152306024820152604481018490529160209183916064918391600091165af1801561019757610639575b50610422565b6106509060203d8111610190576101818183610a31565b5083610633565b6001600160a01b036106676109d2565b6040516323b872dd60e01b8152336004820152306024820152604481018590529160209183916064918391600091165af18015610197576106a9575b50610419565b6106c09060203d8111610190576101818183610a31565b50826106a3565b634e487b7160e01b600052601160045260246000fd5b60203660031901126101d15760043580600052600160205260406000206001600160801b03908160028201541661079b576005015490811615908161078f575b501561075557600052600160205260006005604082208281558260018201558260028201558260038201558260048201550155600080f35b60405162461bcd60e51b8152602060048201526012602482015271556e636f6c6c656374656420746f6b656e7360701b6044820152606490fd5b905060801c158261071d565b60405162461bcd60e51b815260206004820152601c60248201527f506f736974696f6e207374696c6c20686173206c6971756964697479000000006044820152606490fd5b60c03660031901126101d157600435600090815260016020526040902080546001600160a01b03161561085f576060906044356024356001600160801b0360028161082b8585610a6b565b1694019081549061083e86828416610a78565b16906001600160801b03191617905560405192835260208301526040820152f35b60405162461bcd60e51b815260206004820152601760248201527f506f736974696f6e20646f6573206e6f742065786973740000000000000000006044820152606490fd5b60a03660031901126101d157600435600052600160205260406000209060028201918254926001600160801b039283851690846108df610a93565b1682106109975750836108f0610a93565b169003938385116106c75761096b60059361098b9386936040986001600160801b03199586911691161790556f7fffffffffffffffffffffffffffffff9586610937610a93565b60011c1696610944610a93565b60011c16958692019384549161095c89828516610a78565b1691161780845560801c610a78565b81546001600160801b031660809190911b6001600160801b031916179055565b82519182526020820152f35b62461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606490fd5b6004356001600160a01b03811681036101d15790565b6024356001600160a01b03811681036101d15790565b610140810190811067ffffffffffffffff821117610a1b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a1b57604052565b908160209103126101d1575180151581036101d15790565b919082018092116106c757565b9190916001600160801b03808094169116019182116106c757565b6024356001600160801b03811681036101d1579056fea26469706673582212209914cb6cef1b34b5f1fcaabd01435c559af32b56011fa276295b72121a16681d64736f6c63430008130033";

type MockDragonSwapPositionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDragonSwapPositionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDragonSwapPositionManager__factory extends ContractFactory {
  constructor(...args: MockDragonSwapPositionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockDragonSwapPositionManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockDragonSwapPositionManager__factory {
    return super.connect(runner) as MockDragonSwapPositionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDragonSwapPositionManagerInterface {
    return new Interface(_abi) as MockDragonSwapPositionManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockDragonSwapPositionManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockDragonSwapPositionManager;
  }
}
