/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockDragonSwapRouter,
  MockDragonSwapRouterInterface,
} from "../../../contracts/mocks/MockDragonSwapRouter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IDragonSwapRouter.ExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IDragonSwapRouter.ExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576103a0908161001c8239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c908163414bf389146101b6575063db3e21981461003b57600080fd5b6101003660031901126101b25760a4359160c4358311610176576001600160a01b0393846100676102d3565b84516323b872dd60e01b815233848201908152306020808301919091526040820189905298939192899284928390036060019183918991165af1801561016c5792879287926100ff969561014f575b506100bf6102ee565b1690846100ca610304565b885163a9059cbb60e01b81526001600160a01b0390911692810192835260208301949094529295869384929091839160400190565b03925af19081156101445750610117575b5051908152f35b61013690843d861161013d575b61012e818361031a565b810190610352565b5038610110565b503d610124565b8351903d90823e3d90fd5b61016590853d871161013d5761012e818361031a565b50386100b6565b85513d86823e3d90fd5b815162461bcd60e51b81526020818601526016602482015275115e18d95cdcda5d99481a5b9c1d5d08185b5bdd5b9d60521b6044820152606490fd5b5080fd5b8483856101003660031901126102d0576001600160a01b0392836101d86102d3565b6323b872dd60e01b8752338388019081523060208083019190915260a435604083018190529098909793909289928492908390036060019183918991165af1801561016c576102b3575b5060c4358510610270578461023c939287926100bf6102ee565b03925af19081156101445750610253575051908152f35b61026990843d861161013d5761012e818361031a565b5083610110565b835162461bcd60e51b8152808301879052601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606490fd5b6102c990873d891161013d5761012e818361031a565b5086610222565b80fd5b6004356001600160a01b03811681036102e95790565b600080fd5b6024356001600160a01b03811681036102e95790565b6064356001600160a01b03811681036102e95790565b90601f8019910116810190811067ffffffffffffffff82111761033c57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126102e9575180151581036102e9579056fea2646970667358221220f30300d6956c59998217df20a56abc97e8698cc1d66b536a1ce5bdb57ee4e12b64736f6c63430008130033";

type MockDragonSwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDragonSwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDragonSwapRouter__factory extends ContractFactory {
  constructor(...args: MockDragonSwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockDragonSwapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockDragonSwapRouter__factory {
    return super.connect(runner) as MockDragonSwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDragonSwapRouterInterface {
    return new Interface(_abi) as MockDragonSwapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockDragonSwapRouter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockDragonSwapRouter;
  }
}
